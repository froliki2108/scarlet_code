#Convert

from cProfile import label
from cgitb import text
from itertools import tee
from tkinter import *
from tkinter import ttk
from tkinter.ttk import Combobox
import tkinter as tk
from tkinter.messagebox import askyesno
from tkinter.messagebox import showerror

from setuptools import Command

from tempTela import button_clicked


#app size
root = tk.Tk()
root.title('Temperatura')
root.geometry('540x180')
root.resizable(False, False)


#conversion
def fahrenheit_to_celsius(f):
    
     return (f - 32) * 5/9

def celsius_to_fahrenheit(c):
    return (c * 9/5) + 32 

# frame
frame = ttk.Frame(root)


# field options
options = {'padx': 5, 'pady': 5}

# temperature label
temperature_label = ttk.Label(frame, text='Temperature')
temperature_label.grid(column=0, row=0, sticky='W', **options)

# temperature entry
temperature = tk.StringVar()
temperature_entry = ttk.Entry(frame, textvariable=temperature)
temperature_entry.grid(column=1, row=0, **options)
temperature_entry.focus()

# convert to celsius button


def f_button_clicked():
    try:
        f = float(temperature.get())
        c = fahrenheit_to_celsius(f)
        result = f'{f} Fahrenheit = {c:.2f} Celsius'
        result_label.config(text=result)
    except ValueError as erro:
        showerror(title='Erro', message=erro)

convert_button = ttk.Button(frame, text='Convert to Celsius')
convert_button.grid(column=2, row=0, sticky='W', **options)
convert_button.configure(command=f_button_clicked)


# convert to fahrenheit button

def c_button_clicked():
    try:
        c = float(temperature.get())
        f = celsius_to_fahrenheit(c)
        result = f'{c} Celsius = {f:.2f} Fahrenheit'
        result_label.config(text=result)
    except ValueError as erro:
        showerror(title='Erro', message=erro)

convert_button = ttk.Button(frame, text='Convert to Fahrenheit')
convert_button.grid(column=5, row=0, sticky='W', **options)
convert_button.configure(command=c_button_clicked)

# result label
result_label = ttk.Label(frame)
result_label.grid(row=1, columnspan=3, **options)

# add padding to the frame and show it
frame.grid(padx=10, pady=10)


# start the app
root.mainloop()
